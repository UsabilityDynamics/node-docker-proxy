machine:
  node:
    version: v0.11.13
  services:
    - docker
  hosts:
    site1.com: 127.0.0.1
    api.site1.com: 127.0.0.1
    cdn.site1.com: 127.0.0.1
    www.site1.com: 127.0.0.1
    site2.com: 127.0.0.1
    api.site2.com: 127.0.0.1
    cdn.site2.com: 127.0.0.1
    www.site2.com: 127.0.0.1
    site3.com: 127.0.0.1
    api.site3.com: 127.0.0.1
    cdn.site3.com: 127.0.0.1
    www.site3.com: 127.0.0.1
    site4.com: 127.0.0.1
    api.site4.com: 127.0.0.1
    cdn.site4.com: 127.0.0.1
    www.site4.com: 127.0.0.1
    site5.com: 127.0.0.1
    api.site5.com: 127.0.0.1
    cdn.site5.com: 127.0.0.1
    www.site5.com: 127.0.0.1

dependencies:
  pre:
    - git config --global user.email ${GITHUB_EMAIL}
    - git config --global user.name ${GITHUB_USERNAME}
    - git config --global push.default simple
    - "export DOCKER_ADDRESS=$(ifconfig docker0 | grep 'inet addr' | awk -F: '{print $2}' | awk '{print $1}')"
    - echo "DOCKER_OPTS='--host=tcp://172.17.42.1:2875 --host=unix:///var/run/docker.sock -s btrfs -e lxc'" | sudo tee --append /etc/default/docker > /dev/null
    - echo "DOCKER_PORT=2875" | sudo tee --append /etc/environment > /dev/null
    - echo "DOCKER_ADDRESS=172.17.42.1" | sudo tee --append /etc/environment > /dev/null
    - echo "DOCKER_HOST='172.17.42.1:2875'" | sudo tee --append /etc/environment > /dev/null
    - sudo service docker restart
    - docker login --username=${DOCKER_HUB_USERNAME} --email=${DOCKER_HUB_EMAIL} --password=${DOCKER_HUB_PASSWORD}
    - cd ~/${CIRCLE_PROJECT_REPONAME} && npm link
  post:
    - make dockerImage;
    - make runTestContainer;

test:
  post:
    - mocha test/functional
    - sh /home/ubuntu/node-docker-proxy/test/acceptance/fixtures/start-containers.sh
    - make dockerImage; sleep 5
    - make runTestContainer; sleep 5
    - mocha test/integration
    - mocha test/acceptance

deployment:
  develop:
    branch: develop
    commands:
      - make dockerRelease;
      - grunt deployment --branch=${CIRCLE_BRANCH} --version=$(docker-proxy -V);
  master:
    branch: master
    commands:
      - make dockerRelease;
      - grunt deployment --branch=${CIRCLE_BRANCH} --version=$(docker-proxy -V);
